#include "ft_list.h"

void	ft_sorted_list_merge(t_list **begin_list1, t_list **begin_list2, int (*cmp)());
int	c(char *d, char *d1)
{
	return (d[0] - d1[0]);
}
#include <stdio.h>
#include <stdlib.h>
int	main(void)
{
	t_list *l;
	t_list *r;
	t_list *t;
	char	*p[] = {"1","2","3","4","5","6","7","8", "9"};
	l = malloc(sizeof(t_list));
	t = malloc(sizeof(t_list));
	l->data = p[0];
	r = l;
	for (int i =1;i<9;i++)
	{
		if (i % 2)
			continue ;
		l->next = malloc(sizeof(t_list));
		l->next->data = p[i];
		l = l->next;
	}
	t->data = p[1];
	l = t;
	for (int i =2;i<9;i++)
	{
		if (i % 2 == 0)
			continue ;
		l->next = malloc(sizeof(t_list));
		l->next->data = p[i];
		l = l->next;
	}
	l = t;
	while (l)
	{
		printf("%s", l->data);
		l = l->next;
	}
	printf("%s","\n");
	// ft_sorted_list_insert(&r, "4", c);
	// ft_list_push_back(&r, "4");
	ft_sorted_list_merge(t, r, c);
	while (r)
	{
		printf("%s", r->data);
		r =r->next;
	}
}