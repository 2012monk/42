
#include "ft_list.h"
#include <stdlib.h>
#include <stdio.h>
void	f(void *d)
{
	printf("%s\n", d);

}
t_list	*ft_list_at(t_list *begin_list, unsigned int nbr);
void	ft_list_reverse(t_list **begin_list);
int	main()
{
	t_list *list;
	t_list *tmp;
	char	*m[] = {"1","2","3","4","5"};

	list = malloc(sizeof(t_list *));
	tmp = list;
	tmp->data = m[0];
	for (int i=1;i<5;i++)
	{
		tmp->next = malloc(sizeof(t_list));
		tmp = tmp->next;
		tmp->data = m[i];
	}
	ft_list_clear(list, f);
	printf("===%d\n", list == NULL);
	while (list)
	{
		if (list)
			printf("%s", list->data);
	}
}

#include "ft_list.h"
#include <stdlib.h>
#include <stdio.h>
void	f(void *d)
{
	printf("%s\n", d);

}
t_list	*ft_list_at(t_list *begin_list, unsigned int nbr);
void	ft_list_reverse(t_list **begin_list);
int	main()
{
	t_list *list;
	t_list *tmp;
	char	*m[] = {"1","2","3","4","5"};

	list = malloc(sizeof(t_list *));
	tmp = list;
	tmp->data = m[0];
	for (int i=1;i<5;i++)
	{
		tmp->next = malloc(sizeof(t_list));
		tmp = tmp->next;
		tmp->data = m[i];
	}
	ft_list_clear(list, f);
	printf("===%d\n", list == NULL);
	while (list)
	{
		if (list)
			printf("%s", list->data);
	}
}
